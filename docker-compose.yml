version: '3.5'
services:

  # Nginx Reverse Proxy
  nginx:
    container_name: queueing-nginx
    image: nginx:1.13.12-alpine
    ports:
      - "8080:80"
      - "9229:9229"
    volumes:
      - ./docker/nginx/:/etc/nginx/conf.d/
    networks: 
      - queueing_link

  # Express
  express:
    container_name: queueing-express
    build:
      context: ./docker/express
    volumes:
      - ./express:/app
      - /app/node_modules
    command: npm run dev
    networks: 
      - queueing_link
  
  # Database
  db:
    container_name: queueing-db
    image: mariadb
    restart: always
    ports:
      - "3306:3306"
    volumes:
      - ./queueing-db:/var/lib/mysql
    environment:
      MYSQL_USER: queueing-access
      MYSQL_PASSWORD: whateverItworks
      MYSQL_ROOT_PASSWORD: example
      MYSQL_DATABASE: queueing
    networks: 
      - queueing_link
  
  # adminer
  adminer:
    container_name: queueing-adminer
    image: adminer
    restart: always
    ports:
      - 8081:8080
    networks: 
      - queueing_link

  # RabbitMQ
  rabbitmq:
    container_name: queueing-rabbitmq
    image: rabbitmq:3.8.0-management-alpine
    hostname: rabbitmq
    tty: true
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ml-rabbitmq
      RABBITMQ_DEFAULT_PASS: passwordpala
    volumes:
      - ./queueing-rabbitmq:/var/lib/rabbitmq
    networks: 
      - queueing_link

networks:
  queueing_link:
    name: Queueing_Link